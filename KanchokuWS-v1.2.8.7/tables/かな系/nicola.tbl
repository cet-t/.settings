#define display-name "NICOLA (親指シフト)"

;; DvorakJ より引用
;;
;; NICOLA 配列規格書
;; http://nicola.sunicom.co.jp/spec/kikaku.htm
;;
;; よく分からない NICOLA配列を復元してみる - blechmusik2の日記
;; http://d.hatena.ne.jp/blechmusik2/20100110/1263060420
;;

;; ----------------------------------------------------------------------------------
;; 下記の定義により、親指シフトキーの割り当てが変更できる
;; ----------------------------------------------------------------------------------
#define LEFT_SHIFT_KEY muhenkan     ; 左親指シフトキー
;;#define LEFT_SHIFT_KEY space      ; 左親指シフトキー
;;#define RIGHT_SHIFT_KEY space     ; 右親指シフトキー
#define RIGHT_SHIFT_KEY henkan      ; 右親指シフトキー

;; 変換・無変換キーの単打を本来のキーとして利用する場合は、設定ダイアログの
;;  「同時打鍵・IME」タブ > 「単打の場合は本来のキーとして機能する」
;; にチェックを入れること

;; 下記定義により、ワンショットシフトと連続シフトを切り替えられる
#define COMBO_KIND oneshot          ; ワンショットシフト
;;#define COMBO_KIND successive     ; 連続シフト

;; ----------------------------------------------------------------------------------
;; 当配列でのみ有効なオプション設定
;; ----------------------------------------------------------------------------------
;; IMEの状態に合わせてデコーダをON/OFFする
#set imeCooperationEnabled=true

;; IMEのローマ字入力モードに対応するか
;;#set imeSendInputInRoman=true
;; IMEのかな入力モードに対応するか
;;#set imeSendInputInKana=false
;; IMEに対してUnicodeで送信するか
#set imeSendInputInUnicode=false
;; IMEの入力モード対応時にカタカナをひらがなに変更するか
;;#set imeKatakanaToHiragana=true

;; 「変換」キーと「無変換」キーについて、単打の場合は本来のキーとして機能させる
#set useComboExtModKeyAsSingleHit=true

;; 同時打鍵判定で、第1打鍵が文字キーの場合にタイマーを使用する (同時打鍵条件 A)
#set useCombinationKeyTimer1=true

;; ---------------------------------------------------------
;; 単打
;; ---------------------------------------------------------
{
   1 |  2 |  3 |  4 |  5 |  6 |  7 |  8 |  9 |  0 |
  。 | か | た | こ | さ | ら | ち | く | つ | ， |
  う | し | て | け | せ | は | と | き | い | ん |
  ． | ひ | す | ふ | へ | め | そ | ね | ほ | ・ |
 " " | "-"| "^"| ￥ | 、 | 「 | ":"| 」 | 
}

;; ---------------------------------------------------------
;; 左シフトとの同時打鍵
;; ---------------------------------------------------------
#store LEFT_SHIFT
{
     |    |    |    |    |    |    |    |    |    |
  ぁ | え | り | ゃ | れ | ぱ | ぢ | ぐ | づ | ぴ |
  を | あ | な | ゅ | も | ば | ど | ぎ | ぽ | "" |
  ぅ | ー | ろ | や | ぃ | ぷ | ぞ | ぺ | ぼ | @゛|
}
#end store

;; ---------------------------------------------------------
;; 右シフトとの同時打鍵
;; ---------------------------------------------------------
#store RIGHT_SHIFT
{
     |    |    |    |    |    |    |    |    |    |
  @゜| が | だ | ご | ざ | よ | に | る | ま | ぇ |
  ヴ | じ | で | げ | ぜ | み | お | の | ょ | っ |
  "" | び | ず | ぶ | べ | ぬ | ゆ | む | わ | ぉ |
}
#end store

;; ---------------------------------------------------------
;; 同時打鍵定義の開始
;; ---------------------------------------------------------
#combination COMBO_KIND

;; 左親指シフトキー
#disableExtKey LEFT_SHIFT_KEY
-$LEFT_SHIFT_KEY>
#load LEFT_SHIFT

;; 右親指シフトキー
#disableExtKey RIGHT_SHIFT_KEY
-$RIGHT_SHIFT_KEY>
#load RIGHT_SHIFT

#end combination
;; ---------------------------------------------------------
;; 同時打鍵定義の終わり
;; ---------------------------------------------------------
